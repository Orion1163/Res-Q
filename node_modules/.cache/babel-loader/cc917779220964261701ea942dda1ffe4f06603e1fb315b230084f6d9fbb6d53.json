{"ast":null,"code":"var _jsxFileName = \"D:\\\\ResQMain\\\\src\\\\components\\\\Dashboard\\\\Dashboard.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport './Dashboard.css';\n// import { database } from '../../firebasecon';\nimport { addDoc, collection, deleteDoc, doc, getDocs, updateDoc } from 'firebase/firestore';\nimport { Navigation } from '../navigation';\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\nimport { database } from \"../../firebase-config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  //   const [email, setEmail] = useState('');\n  //   const [password, setPassword] = useState('');\n  //   const [id, setId] = useState('');\n  //   const [show, setShow] = useState(false);\n  //   const [val, setVal] = useState([]);\n  //   const value = collection(database, \"policeOfficers\");\n\n  //   useEffect(() => {\n  //     getData();\n  //   }, []); // Only run once on component mount\n\n  //   const getData = async () => {\n  //     const dbVal = await getDocs(value);\n  //     setVal(dbVal.docs.map(doc => ({ ...doc.data(), id: doc.id })));\n  //   }\n\n  //   const handleCreate = async () => {\n  //     await addDoc(value, { Email: email, Password: password });\n  //     setEmail(\"\");\n  //     setPassword(\"\");\n  //     getData(); // Update local state after creating\n  //   }\n\n  //   const handleDelete = async (id) => {\n  //     await deleteDoc(doc(database, \"policeOfficers\", id));\n  //     getData(); // Update local state after deleting\n  //   }\n\n  //   const handleEdit = (id, Email, Password) => {\n  //     setEmail(Email);\n  //     setPassword(Password);\n  //     setId(id);\n  //     setShow(true);\n  //   }\n\n  //   const handleUpdate = async () => {\n  //     await updateDoc(doc(database, \"policeOfficers\", id), { Email: email, Password: password });\n  //     setShow(false);\n  //     setEmail(\"\");\n  //     setPassword(\"\");\n  //     getData(); // Update local state after updating\n  //   }\n\n  //   const [data, setData] = useState([]);\n\n  //   useEffect(() => {\n  //     // Create a reference to the Firestore collection\n  //     const collectionRef = collection(database   , 'police_users');\n\n  //     // Fetch data from Firestore\n  //     const fetchData = async () => {\n  //       try {\n  //         const snapshot = await getDocs(collectionRef);\n  //         const fetchedData = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n  //         setData(fetchedData);\n  //       } catch (error) {\n  //         console.error('Error fetching data:', error);\n  //       }\n  //     };\n\n  //     fetchData();\n  //   }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const email = e.target.email.value;\n    const password = e.target.password.value;\n    createUserWithEmailAndPassword(database, email);\n  };\n  const toggleVerified = async (id, currentVerified) => {\n    try {\n      const docRef = doc(database, 'police_users', id);\n      await updateDoc(docRef, {\n        verified: !currentVerified\n      });\n      // Update the local state to reflect the change\n      setData(prevData => prevData.map(item => item.id === id ? {\n        ...item,\n        verified: !currentVerified\n      } : item));\n    } catch (error) {\n      console.error('Error updating verification status:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: '#333',\n      color: '#ffffff',\n      height: '500%'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        backgroundColor: '#333',\n        color: '#ffffff'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        style: {\n          backgroundColor: '#333'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: email,\n            name: \"email\",\n            className: \"input-box\",\n            placeholder: \"Email\",\n            style: {\n              color: '#000000'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 114\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: password,\n            name: \"password\",\n            className: \"input-box\",\n            placeholder: \"Password\",\n            style: {\n              color: '#000000'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 141\n          }, this), !show ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"create-box\",\n            onClick: e => handleSubmit(e),\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 20\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"update-box\",\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Police Officers Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          style: {\n            backgroundColor: '#333',\n            color: '#ffffff'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Age\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Service City\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Verified\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.age\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.serviceCity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"verify_button\",\n                  onClick: () => toggleVerified(item.id, item.verified),\n                  children: item.verified ? 'Verified' : 'Verify'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 15\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","addDoc","collection","deleteDoc","doc","getDocs","updateDoc","Navigation","createUserWithEmailAndPassword","database","Dashboard","handleSubmit","e","preventDefault","email","target","value","password","toggleVerified","id","currentVerified","docRef","verified","setData","prevData","map","item","error","console","backgroundColor","color","height","show","data","name","age","serviceCity"],"sources":["D:/ResQMain/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './Dashboard.css';\r\n// import { database } from '../../firebasecon';\r\nimport { addDoc, collection, deleteDoc, doc, getDocs, updateDoc } from 'firebase/firestore';\r\nimport { Navigation } from '../navigation';\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { database } from \"../../firebase-config\";\r\n\r\n\r\n\r\n\r\nfunction Dashboard() {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [id, setId] = useState('');\r\n//   const [show, setShow] = useState(false);\r\n//   const [val, setVal] = useState([]);\r\n//   const value = collection(database, \"policeOfficers\");\r\n\r\n//   useEffect(() => {\r\n//     getData();\r\n//   }, []); // Only run once on component mount\r\n\r\n//   const getData = async () => {\r\n//     const dbVal = await getDocs(value);\r\n//     setVal(dbVal.docs.map(doc => ({ ...doc.data(), id: doc.id })));\r\n//   }\r\n\r\n//   const handleCreate = async () => {\r\n//     await addDoc(value, { Email: email, Password: password });\r\n//     setEmail(\"\");\r\n//     setPassword(\"\");\r\n//     getData(); // Update local state after creating\r\n//   }\r\n\r\n//   const handleDelete = async (id) => {\r\n//     await deleteDoc(doc(database, \"policeOfficers\", id));\r\n//     getData(); // Update local state after deleting\r\n//   }\r\n\r\n//   const handleEdit = (id, Email, Password) => {\r\n//     setEmail(Email);\r\n//     setPassword(Password);\r\n//     setId(id);\r\n//     setShow(true);\r\n//   }\r\n\r\n//   const handleUpdate = async () => {\r\n//     await updateDoc(doc(database, \"policeOfficers\", id), { Email: email, Password: password });\r\n//     setShow(false);\r\n//     setEmail(\"\");\r\n//     setPassword(\"\");\r\n//     getData(); // Update local state after updating\r\n//   }\r\n\r\n//   const [data, setData] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     // Create a reference to the Firestore collection\r\n//     const collectionRef = collection(database   , 'police_users');\r\n\r\n//     // Fetch data from Firestore\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const snapshot = await getDocs(collectionRef);\r\n//         const fetchedData = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n//         setData(fetchedData);\r\n//       } catch (error) {\r\n//         console.error('Error fetching data:', error);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, []);\r\n\r\nconst handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const email = e.target.email.value\r\n    const password = e.target.password.value\r\n\r\n    createUserWithEmailAndPassword(database, email)\r\n}\r\n\r\n  const toggleVerified = async (id, currentVerified) => {\r\n    try {\r\n      const docRef = doc(database, 'police_users', id);\r\n      await updateDoc(docRef, { verified: !currentVerified });\r\n      // Update the local state to reflect the change\r\n      setData(prevData =>\r\n        prevData.map(item =>\r\n          item.id === id ? { ...item, verified: !currentVerified } : item\r\n        )\r\n      );\r\n    } catch (error) {\r\n      console.error('Error updating verification status:', error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div style={{ backgroundColor: '#333', color: '#ffffff',height: '500%' }}>\r\n    <div className='container'style={{ backgroundColor: '#333', color: '#ffffff' }}>\r\n      <Navigation />\r\n      <div className=\"content\"style={{ backgroundColor: '#333' }}>\r\n        <div className=\"container-box\">\r\n          <input value={email} name='email' className='input-box' placeholder='Email' style={{color:'#000000'}}/><br />\r\n          <input type=\"password\" value={password} name='password' className='input-box' placeholder='Password'  style={{color:'#000000'}}/> <br />\r\n          {!show ? <button  className='create-box' onClick={(e)=>handleSubmit(e)}>Create</button> :\r\n            <button  className='update-box'>Update</button>}\r\n        </div><br/><br/>\r\n        \r\n        {/* <h2>Police Officers List</h2>\r\n        <table style={{ backgroundColor: '#333', color: '#ffffff' }}>\r\n          <thead>\r\n            <tr>\r\n              <th>Email</th>\r\n              <th>Password</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {val.map(values =>\r\n              <tr key={values.id}>\r\n                <td>{values.Email}</td>\r\n                <td>{values.Password}</td>\r\n                <td>\r\n                  <button onClick={() => handleDelete(values.id)} className='delete-box'>Delete</button>\r\n                  <button onClick={() => handleEdit(values.id, values.Email, values.Password)} className='edit-box'>Edit</button>\r\n                </td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </table><br/><br/><br/> */}\r\n\r\n        <h2>Police Officers Details</h2>\r\n        <table style={{ backgroundColor: '#333', color: '#ffffff' }}>\r\n       <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Age</th>\r\n            <th>Service City</th>\r\n            <th>Verified</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map(item => (\r\n            <tr key={item.id}>\r\n              <td>{item.name}</td>\r\n              <td>{item.email}</td>\r\n              <td>{item.age}</td>\r\n              <td>{item.serviceCity}</td>\r\n              <td>\r\n              <button className=\"verify_button\" onClick={() => toggleVerified(item.id, item.verified)}>\r\n                  {item.verified ? 'Verified' : 'Verify'}\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>  \r\n        </table>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}